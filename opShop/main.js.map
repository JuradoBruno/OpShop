{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/components/admin-orders/admin-orders.component.css","webpack:///./src/app/admin/components/admin-orders/admin-orders.component.html","webpack:///./src/app/admin/components/admin-orders/admin-orders.component.ts","webpack:///./src/app/admin/components/admin-products/admin-products.component.css","webpack:///./src/app/admin/components/admin-products/admin-products.component.html","webpack:///./src/app/admin/components/admin-products/admin-products.component.ts","webpack:///./src/app/admin/components/product-form/product-form.component.css","webpack:///./src/app/admin/components/product-form/product-form.component.html","webpack:///./src/app/admin/components/product-form/product-form.component.ts","webpack:///./src/app/admin/services/admin-auth-guard.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/components/bs-navbar/bs-navbar.component.css","webpack:///./src/app/core/components/bs-navbar/bs-navbar.component.html","webpack:///./src/app/core/components/bs-navbar/bs-navbar.component.ts","webpack:///./src/app/core/components/home/home.component.css","webpack:///./src/app/core/components/home/home.component.html","webpack:///./src/app/core/components/home/home.component.ts","webpack:///./src/app/core/components/login/login.component.css","webpack:///./src/app/core/components/login/login.component.html","webpack:///./src/app/core/components/login/login.component.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/shared/components/product-card/product-card.component.css","webpack:///./src/app/shared/components/product-card/product-card.component.html","webpack:///./src/app/shared/components/product-card/product-card.component.ts","webpack:///./src/app/shared/components/product-quantity/product-quantity.component.css","webpack:///./src/app/shared/components/product-quantity/product-quantity.component.html","webpack:///./src/app/shared/components/product-quantity/product-quantity.component.ts","webpack:///./src/app/shared/models/order.ts","webpack:///./src/app/shared/models/product.ts","webpack:///./src/app/shared/models/shopping-cart.ts","webpack:///./src/app/shared/services/auth-guard.service.ts","webpack:///./src/app/shared/services/auth.service.ts","webpack:///./src/app/shared/services/category.service.ts","webpack:///./src/app/shared/services/order.service.ts","webpack:///./src/app/shared/services/product.service.ts","webpack:///./src/app/shared/services/shopping-cart.service.ts","webpack:///./src/app/shared/services/user.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shopping/components/check-out/check-out.component.css","webpack:///./src/app/shopping/components/check-out/check-out.component.html","webpack:///./src/app/shopping/components/check-out/check-out.component.ts","webpack:///./src/app/shopping/components/my-orders/my-orders.component.css","webpack:///./src/app/shopping/components/my-orders/my-orders.component.html","webpack:///./src/app/shopping/components/my-orders/my-orders.component.ts","webpack:///./src/app/shopping/components/order-success/order-success.component.css","webpack:///./src/app/shopping/components/order-success/order-success.component.html","webpack:///./src/app/shopping/components/order-success/order-success.component.ts","webpack:///./src/app/shopping/components/products/product-filter/product-filter.component.css","webpack:///./src/app/shopping/components/products/product-filter/product-filter.component.html","webpack:///./src/app/shopping/components/products/product-filter/product-filter.component.ts","webpack:///./src/app/shopping/components/products/products.component.css","webpack:///./src/app/shopping/components/products/products.component.html","webpack:///./src/app/shopping/components/products/products.component.ts","webpack:///./src/app/shopping/components/shipping-form/shipping-form.component.css","webpack:///./src/app/shopping/components/shipping-form/shipping-form.component.html","webpack:///./src/app/shopping/components/shipping-form/shipping-form.component.ts","webpack:///./src/app/shopping/components/shopping-cart-summary/shopping-cart-summary.component.css","webpack:///./src/app/shopping/components/shopping-cart-summary/shopping-cart-summary.component.html","webpack:///./src/app/shopping/components/shopping-cart-summary/shopping-cart-summary.component.ts","webpack:///./src/app/shopping/components/shopping-cart/shopping-cart.component.css","webpack:///./src/app/shopping/components/shopping-cart/shopping-cart.component.html","webpack:///./src/app/shopping/components/shopping-cart/shopping-cart.component.ts","webpack:///./src/app/shopping/shopping.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AAEqD;AACN;AACA;AACnB;AAEjB;AAEL;AACgB;AAwB/D;IAAA;IAA2B,CAAC;IAAf,WAAW;QAtBvB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,iEAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC;oBACpB,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,oGAAoB,EAAE,WAAW,EAAC,CAAC,4EAAS,EAAE,iFAAc,CAAC,EAAC;oBACvG,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,oGAAoB,EAAE,WAAW,EAAC,CAAC,4EAAS,EAAE,iFAAc,CAAC,EAAC;oBACvG,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,0GAAsB,EAAE,WAAW,EAAC,CAAC,4EAAS,EAAE,iFAAc,CAAC,EAAC;oBACrG,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,oGAAoB,EAAE,WAAW,EAAC,CAAC,4EAAS,EAAE,iFAAc,CAAC,EAAC;iBAClG,CAAC;aACH;YACD,YAAY,EAAE;gBACZ,0GAAsB;gBACtB,oGAAoB;gBACpB,oGAAoB;aACrB;YACD,SAAS,EAAE;gBACT,iFAAc;aACf;YACD,OAAO,EAAE;YACP,uBAAuB;aACxB;SACF,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;AClCxB,mB;;;;;;;;;;;ACAA,8cAA8c,iBAAiB,iCAAiC,cAAc,60BAA60B,iBAAiB,qCAAqC,cAAc,mQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA72C;AACe;AAQjE;IAKE,8BAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAE9C,CAAC;IAEK,uCAAQ,GAAd;;;;;;wBACE,SAAI;wBAAW,qBAAM,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;;wBAArD,GAAK,OAAO,GAAG,SAAsC,CAAC;;;;;KACvD;IAEK,6CAAc,GAApB;;;;;;wBACE,SAAI;wBAAgB,qBAAM,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,8BAA8B,CAAC;;wBAA3F,GAAK,YAAY,GAAG,SAAuE,CAAC;;;;;KAC7F;IAfU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAMkC,8EAAY;OALnC,oBAAoB,CAiBhC;IAAD,2BAAC;CAAA;AAjBgC;;;;;;;;;;;;ACTjC,mB;;;;;;;;;;;ACAA,8iBAA8iB,SAAS,2BAA2B,gBAAgB,2BAA2B,MAAM,uJ;;;;;;;;;;;;;;;;;;;;;;;;;ACAtiB;AACxB;AAarE;IASE,gCAAoB,cAA8B;QAAlD,iBAKC;QALmB,mBAAc,GAAd,cAAc,CAAgB;QAChD,2GAA2G;QAC3G,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,WAAC;YACxD,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAM,GAAN,UAAO,KAAa;QAClB,IAAI,CAAC,gBAAgB,GAAG,CAAC,KAAK,CAAC,EAAC;YAChC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAnD,CAAmD,CAAC,CAAC,CAAC;YACvF,IAAI,CAAC,eAAe,CAAC;IACvB,CAAC;IAED,4CAAW,GAAX;QACC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC;IAxBU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAUoC,kFAAc;OATvC,sBAAsB,CAyBlC;IAAD,6BAAC;CAAA;AAzBkC;;;;;;;;;;;;ACdnC,mB;;;;;;;;;;;ACAA,ouDAAouD,MAAM,uBAAuB,QAAQ,2kC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5sD;AACM;AAGE;AACZ;AACd;AACK;AAOhD;IAeE,8BACU,eAAgC,EAChC,cAA8B,EAC9B,MAAc,EACd,KAAqB;QAJ/B,iBAaG;QAZO,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAX/B,YAAO,GAAY,IAAI,6DAAO,EAAE,CAAC;QAa/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;QAEjD,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,IAAI,CAAC,EAAE,EAAE;YACX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,OAAO,GAAG,CAAC,EAAhB,CAAgB,CAAC;SACtG;IAED,CAAC;IA1BH,0CAAW,GAAX;QACE,IAAG,IAAI,CAAC,YAAY;YACpB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAuBE,CAAC;IAEJ,mCAAI,GAAJ,UAAK,OAAO;QACV,IAAI,IAAI,CAAC,EAAE,EAAE;YACX,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC;SAAC;aAC3C;YACF,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACrC;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,qCAAM,GAAN;QACE,IAAI,OAAO,CAAC,+CAA+C,CAAC,EAAC;YAC3D,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;SAC1C;IACH,CAAC;IA7CU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAiB2B,gFAAe;YAChB,kFAAc;YACtB,sDAAM;YACP,8DAAc;OAnBpB,oBAAoB,CA8ChC;IAAD,2BAAC;CAAA;AA9CgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdU;AAEgB;AAEC;AACZ;AACW;AAM3D;IAEE,wBAAoB,IAAiB,EAAU,EAAuB,EAAU,WAAwB;QAApF,SAAI,GAAJ,IAAI,CAAa;QAAU,OAAE,GAAF,EAAE,CAAqB;QAAU,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAE7G,oCAAW,GAAX;QAEE,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,0DAAG,CAAC,iBAAO,IAAI,cAAO,CAAC,OAAO,EAAf,CAAe,CAAC,CAAC;IACjE,CAAC;IAPU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,wEAAW,EAAc,yEAAmB,EAAuB,wEAAW;OAF7F,cAAc,CAQ1B;IAAD,qBAAC;CAAA;AAR0B;;;;;;;;;;;;ACZ3B,mB;;;;;;;;;;;ACAA,sU;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAqD;AACM;AAClB;AAEkB;AAO3D;IAGE,sBAAoB,IAAiB,EAAU,MAAc,EAAU,WAAwB;QAA3E,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAC7F,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,cAAI;YAC3C,IAAI,CAAC,IAAI;gBAAE,OAAO;YAElB,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEvB,IAAI,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,CAAC,SAAS;gBAAE,OAAO;YAEvB,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;YACrC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC;QACjC,CAAC,CAAC;IACJ,CAAC;IAED,kCAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAnBU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAI0B,wEAAW,EAAkB,sDAAM,EAAuB,wEAAW;OAHpF,YAAY,CAoBxB;IAAD,mBAAC;CAAA;AApBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXgB;AACiE;AAChD;AACqB;AAChC;AACE;AACiB;AACX;AACH;AAED;AACJ;AAC0B;AACzB;AACsC;AAC1B;AAgC5D;IAAA;IAAyB,CAAC;IAAb,SAAS;QA7BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;aACb;YACD,OAAO,EAAE;gBACP,6DAAU;gBACV,yEAAc;gBACd,+DAAW;gBACX,iEAAY;gBACZ,oEAAkB;gBAClB,gEAAc;gBACd,oEAAkB;gBAClB,4FAAuB;gBACvB,+DAAa;gBACb,uEAAa;gBACb,8DAAiB,CAAC,aAAa,CAAC,oEAAW,CAAC,QAAQ,CAAC;gBACrD,+EAAyB;gBAEzB,4DAAY,CAAC,OAAO,CAAC;oBACnB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mGAAiB,EAAC;oBACzC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sFAAc,EAAC;iBAC5C,CAAC;aAEH;YACD,SAAS,EAAE,EAEV;YACD,SAAS,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC/CtB,wCAAwC,wBAAwB,KAAK,C;;;;;;;;;;;ACArE,w3BAAw3B,iBAAiB,wWAAwW,8OAA8O,cAAc,snB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAh7C;AAGF;AACA;AACiB;AAO5E;IASE,2BAAoB,IAAiB,EAAU,WAAgC;QAA3D,SAAI,GAAJ,IAAI,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAqB;QAH/E,SAAI,GAAiB,IAAI,wEAAY,CAAC,EAAE,CAAC;QACzC,oBAAe,GAAW,CAAC,CAAC;IAG5B,CAAC;IAED,kCAAM,GAAN;QACE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAEK,oCAAQ,GAAd;;;;;;;wBACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,iBAAO,IAAI,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,CAAC,CAAC;wBAEtE,qBAAM,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;;wBAA1C,OAAO,GAAG,SAAgC;wBAC9C,IAAI,OAAO,IAAI,IAAI,EAAC;4BAClB,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,SAAS,CAAC,WAAC;gCACxC,KAAI,CAAC,eAAe,GAAG,CAAC,CAAC;gCACzB,KAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC;gCACtB,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAO;oCAClC,KAAI,CAAC,eAAe,IAAI,OAAO,CAAC,QAAQ,CAAC;gCACzC,CAAC,CAAC,CAAC;4BACL,CAAC,CAAC,CAAC;yBACF;wBAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,WAAC;4BAC/D,IAAI,CAAC,IAAI,IAAI,EAAE;gCACf,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,IAAI,CAAE,WAAC;oCAChC,IAAI,CAAC,IAAI,IAAI,EAAC;wCACZ,KAAI,CAAC,aAAa,GAAG,CAAC,CAAC,SAAS,CAAC,WAAC;4CAClC,KAAI,CAAC,eAAe,GAAG,CAAC,CAAC;4CACzB,KAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC;4CACtB,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAO;gDAClC,KAAI,CAAC,eAAe,IAAI,OAAO,CAAC,QAAQ,CAAC;4CACzC,CAAC,CAAC,CAAC;wCACL,CAAC,CAAC,CAAC;qCACF;gCACH,CAAC,CAAC,CAAC;6BACF;wBACH,CAAC,CAAC;;;;;KAEH;IAED,uCAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE;QAC/B,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;IArDU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAU0B,wEAAW,EAAuB,yFAAmB;OATpE,iBAAiB,CAwD7B;IAAD,wBAAC;CAAA;AAxD6B;;;;;;;;;;;;ACZ9B,mB;;;;;;;;;;;ACAA,4C;;;;;;;;;;;;;;;;;;;;;ACAyC;AAQzC;IAAA;IAEA,CAAC;IAFY,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,aAAa,CAEzB;IAAD,oBAAC;CAAA;AAFyB;;;;;;;;;;;;ACR1B,mB;;;;;;;;;;;ACAA,0H;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACS;AAClB;AAQzC;IAEE,wBAAoB,IAAiB,EAAU,MAAc;QAAzC,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAC5D,CAAC;IAEF,8BAAK,GAAL;QACE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAE7B,CAAC;IATU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAG0B,wEAAW,EAAkB,sDAAM;OAFlD,cAAc,CAW1B;IAAD,qBAAC;CAAA;AAX0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVc;AAEsC;AACd;AACG;AAChB;AACL;AACe;AAiB9D;IAAA;IAA0B,CAAC;IAAd,UAAU;QAftB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,iEAAY;gBACZ,2EAAc;gBACd,4DAAY;aACb;YACD,YAAY,EAAE;gBACZ,2FAAiB;gBACjB,6EAAa;gBACb,gFAAc;aACf;YACD,OAAO,EAAE;gBACP,2FAAiB;aAClB;SACF,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;ACxBvB,+BAA+B,mBAAmB,KAAK,cAAc,gCAAgC,C;;;;;;;;;;;ACArG,+GAA+G,cAAc,wHAAwH,eAAe,oCAAoC,0CAA0C,4IAA4I,kY;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAra;AACT;AACgC;AACrB;AAO3D;IAME,8BAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAHtC,gBAAW,GAAY,IAAI,CAAC;IAIlD,CAAC;IAED,wCAAS,GAAT;QACE,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnD,CAAC;IATiB;QAAjB,2DAAK,CAAC,SAAS,CAAC;kCAAU,6DAAO;yDAAC;IACb;QAArB,2DAAK,CAAC,aAAa,CAAC;;6DAA6B;IAC3B;QAAtB,2DAAK,CAAC,cAAc,CAAC;kCAAe,wEAAY;8DAAC;IAJvC,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAOyC,6FAAmB;OANjD,oBAAoB,CAahC;IAAD,2BAAC;CAAA;AAbgC;;;;;;;;;;;;ACVjC,mB;;;;;;;;;;;ACAA,wPAAwP,0CAA0C,gL;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzO;AACT;AACW;AACiB;AAO5E;IAKE,kCAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;IAC5D,CAAC;IAGD,4CAAS,GAAT;QACE,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnD,CAAC;IAED,gDAAa,GAAb;QACE,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACvD,CAAC;IAbiB;QAAjB,2DAAK,CAAC,SAAS,CAAC;kCAAU,6DAAO;6DAAC;IACZ;QAAtB,2DAAK,CAAC,cAAc,CAAC;kCAAe,wEAAY;kEAAC;IAHvC,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAMyC,yFAAmB;OALjD,wBAAwB,CAiBpC;IAAD,+BAAC;CAAA;AAjBoC;;;;;;;;;;;;;ACRrC;AAAA;AAAA;IA0BM,eAAmB,MAAc,EAAS,QAAa,EAAE,YAA0B;QAAhE,WAAM,GAAN,MAAM,CAAQ;QAAS,aAAQ,GAAR,QAAQ,CAAK;QACrD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAEjC,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAC;YACzC,OAAO;gBACL,OAAO,EAAC;oBACN,KAAK,EAAE,CAAC,CAAC,KAAK;oBACd,QAAQ,EAAE,CAAC,CAAC,QAAQ;oBACpB,KAAK,EAAE,CAAC,CAAC,KAAK;iBACf;gBACD,QAAQ,EAAE,CAAC,CAAC,QAAQ;gBACpB,UAAU,EAAE,CAAC,CAAC,KAAK,GAAC,CAAC,CAAC,QAAQ;aAC/B;QACH,CAAC,CAAC;IACJ,CAAC;IAnCK,uBAAO,GAAf;QACE,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,IAAI,GAAG,CAAC;QACR,IAAI,KAAK,CAAC;QACV,IAAI,IAAI;QACR,IAAI,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;QACzB,GAAG,GAAG,EAAE;QACR,IAAI,EAAE,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAC,CAAC,CAAC;QAC5B,KAAK,GAAG,EAAE,EAAC,eAAe;QAE1B,IAAI,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAC3B,IAAG,EAAE,GAAC,EAAE,EAAC;YACP,GAAG,GAAE,GAAG,GAAC,EAAE,CAAC;SACb;QACD,IAAG,EAAE,GAAC,EAAE,EAAC;YACP,KAAK,GAAC,GAAG,GAAC,EAAE,CAAC;SACd;QACD,IAAI,SAAS,GAAG,GAAG,GAAC,GAAG,GAAC,KAAK,GAAC,GAAG,GAAC,IAAI,CAAC;QACvC,OAAO,SAAS,CAAC;IACnB,CAAC;IAiBL,YAAC;AAAD,CAAC;;;;;;;;;;;;;;AC1CD;AAAA;AAAA;IAAA;IASA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;;ACND;AAAA;AAAA;IAGI,sBAAmB,QAAmB;QAAnB,aAAQ,GAAR,QAAQ,CAAW;IACtC,CAAC;IAED,oCAAoC;IACpC,sCAAe,GAAf;QACI,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAO;YACzB,MAAM,IAAI,OAAO,CAAC,QAAQ,CAAC;QAC/B,CAAC,CAAC;QACF,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,qCAAqC;IACrC,kCAAW,GAAX,UAAY,OAAgB;QACxB,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,EAAnB,CAAmB,CAAC,CAAC;QACxD,OAAO,IAAI,EAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,kCAAkC;IAClC,wCAAiB,GAAjB,UAAkB,OAAgB;QAC9B,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,EAAnB,CAAmB,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,QAAQ,CAAC;IACpC,CAAC;IAED,oCAAa,GAAb;QACI,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAC;YACnB,UAAU,IAAI,CAAC,CAAC,KAAK,GAAC,CAAC,CAAC,QAAQ;QACpC,CAAC,CAAC,CAAC;QACH,OAAO,UAAU,CAAC;IACtB,CAAC;IAEL,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvC0C;AACgC;AAChB;AACtB;AAOrC;IAEE,mBAAoB,IAAiB,EAAU,MAAc;QAAzC,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAElE,+BAAW,GAAX,UAAY,KAAK,EAAE,KAAyB;QAA5C,iBAUG;QARD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0DAAG,CAAC,cAAI;YAClC,IAAI,IAAI;gBAAE,OAAO,IAAI,CAAC;YAEtB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAC,WAAW,EAAE,EAAC,SAAS,EAAE,KAAK,CAAC,GAAG,EAAC,EAAC,CAAC,CAAC,CAAC,gDAAgD;YACzH,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC,CAAC;IAGJ,CAAC;IAdQ,SAAS;QAHrB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,wEAAW,EAAkB,sDAAM;OAFlD,SAAS,CAerB;IAAD,gBAAC;CAAA;AAfqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVqB;AACS;AACQ;AACvB;AACY;AAEX;AACU;AACW;AAM3D;IAIE,qBACY,MAAuB,EACvB,KAAqB,EACrB,EAAuB,EACvB,WAAwB;QAHxB,WAAM,GAAN,MAAM,CAAiB;QACvB,UAAK,GAAL,KAAK,CAAgB;QACrB,OAAE,GAAF,EAAE,CAAqB;QACvB,gBAAW,GAAX,WAAW,CAAa;QAElC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC;IAC/B,CAAC;IAEF,2BAAK,GAAL;QACE,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;QAC1E,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC,yCAAyC;QAEvF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,6CAAa,CAAC,kBAAkB,CAAC;aACxE,IAAI,EAAE;IACT,CAAC;IAED,4BAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,sBAAI,iCAAQ;aAAZ;YAAA,iBAOC;YANC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CACpB,gEAAS,CAAC,cAAI;gBACZ,IAAI,IAAI;oBAAE,OAAO,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,CAAC;gBAC/D,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;YAClB,CAAC,CAAE,CACF,CAAC;QACN,CAAC;;;OAAA;IAhCU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAMoB,iEAAe;YAChB,8DAAc;YACjB,yEAAmB;YACV,wEAAW;OARzB,WAAW,CAmCvB;IAAD,kBAAC;CAAA;AAnCuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdmB;AAEe;AACrB;AAKrC;IAIE,yBAAoB,EAAoB;QAApB,OAAE,GAAF,EAAE,CAAkB;IAEvC,CAAC;IAED,gCAAM,GAAN;QACC,0EAA0E;QAC1E,OAAO,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,cAAc,EAAE,aAAG,IAAI,UAAG,CAAC,OAAO,CAAC,MAAM,CAAC,EAAnB,CAAmB,CAAC,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,0DAAG,CAC7F,iBAAO,IAAI,cAAO,CAAC,GAAG,CAAC,WAAC;YACvB,IAAM,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;YACrC,IAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;YAC5B,IAAM,MAAM,cAAI,EAAE,QAAK,IAAI,CAAC,CAAC;YAC7B,sBAAsB;YACtB,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,EANU,CAMV,CAAC,CAAC;IACP,CAAC;IAlBS,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAKwB,uEAAgB;OAJ7B,eAAe,CAoB3B;IAAD,sBAAC;CAAA;AApB2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRsB;AACQ;AACkB;AAK5E;IAEE,sBAAoB,OAAyB,EAAU,mBAAwC;QAA3E,YAAO,GAAP,OAAO,CAAkB;QAAU,wBAAmB,GAAnB,mBAAmB,CAAqB;IAAI,CAAC;IAE9F,iCAAU,GAAhB,UAAiB,KAAK,EAAE,IAAI;;;;;4BACZ,qBAAM,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAC,KAAK,CAAC,CAAC;;wBAA9E,OAAO,GAAG,SAAoE;wBAClF,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;wBACzC,sBAAO,OAAO,EAAC;;;;KAChB;IAEK,mCAAY,GAAlB;;;;;4BACe,qBAAM,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,YAAY,EAAE;;wBAA/D,MAAM,GAAG,SAAsD;wBACnE,sBAAO,MAAM,EAAC;;;;KACf;IAEK,sCAAe,GAArB,UAAsB,YAAoB;;;;;4BAC3B,qBAAM,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,EAAE,aAAG,IAAK,OAAO,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,YAAY,CAAC,GAAC,CAAC,CAAC,YAAY,EAAE;;wBAAxH,MAAM,GAAG,SAA+G;wBAC5H,sBAAO,MAAM,EAAC;;;;KACf;IAlBU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG6B,uEAAgB,EAA+B,yFAAmB;OAFpF,YAAY,CAmBxB;IAAD,mBAAC;CAAA;AAnBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPkB;AAGN;AACiD;AAOtF;IAQE,wBAAoB,OAAyB;QAAzB,YAAO,GAAP,OAAO,CAAkB;IAAI,CAAC;IAElD,+BAAM,GAAN,UAAO,OAAO;QACZ,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAC3D,CAAC;IAED,+BAAM,GAAN;QACE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAU,WAAW,CAAC,CAAC;QACxE,OAAO,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,0DAAG,CACtD,iBAAO,IAAI,cAAO,CAAC,GAAG,CAAC,WAAC;YACvB,IAAM,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAa,CAAC;YAC7C,IAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;YAC5B,IAAM,MAAM,cAAI,EAAE,QAAK,IAAI,CAAC,CAAC;YAC7B,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,EALU,CAKV,CAAC,CAAC;IACR,CAAC;IAED,4BAAG,GAAH,UAAI,SAAS;QACX,uBAAuB;QACvB,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,0DAAG,CACjF,iBAAO;YACN,IAAM,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAa,CAAC;YAC/C,IAAM,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;YAC9B,IAAM,MAAM,cAAI,EAAE,QAAK,IAAI,CAAC,CAAC;YAC7B,OAAO,MAAiB,CAAC;QAC3B,CAAC,CAAC,CAAC,CAAC;QAEN,2DAA2D;QAC3D,uFAAuF;QACvF,uFAAuF;IAEzF,CAAC;IAED,+BAAM,GAAN,UAAO,SAAS,EAAE,OAAO;QACvB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,SAAS,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC;IAED,+BAAM,GAAN,UAAO,SAAS;QACd,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC;IACtD,CAAC;IA/CU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAS6B,uEAAgB;OARlC,cAAc,CAkD1B;IAAD,qBAAC;CAAA;AAlD0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXwB;AAC6D;AAChE;AACL;AACsB;AAOjE;IASE,6BAAoB,OAAyB;QAAzB,YAAO,GAAP,OAAO,CAAkB;QAP7C,gBAAW,GAAY,IAAI,6DAAO,EAAE,CAAC;QAG7B,oBAAe,GAAG,IAAI,oDAAe,CAAU,KAAK,CAAC,CAAC;QAC9D,oBAAe,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QAIpD,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC9C,CAAC;IAIF,wCAAU,GAAV,UAAW,OAAgB,EAAE,MAAc;QACzC,IAAI,MAAc,CAAC;QACnB,MAAM,GAAG,OAAO,CAAC;QACjB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACzG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;IACrG,CAAC;IAEK,2CAAa,GAAnB,UAAoB,OAAgB;;;;;gBAIlC,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,WAAC;oBAChE,UAAU,GAAG,CAAC;oBAEd,IAAI,UAAU,CAAC,QAAQ,GAAG,CAAC,EAAC;wBAC1B,UAAU,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,GAAG,CAAC,CAAC;wBAC9C,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;qBACnH;yBACI,IAAI,UAAU,CAAC,QAAQ,IAAI,CAAC;wBAC/B,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;gBAC/G,CAAC,CAAC;;;;KACH;IAEK,qCAAO,GAAb;;;;;4BACM,qBAAM,IAAI,CAAC,SAAS,EAAE;;wBAA1B,IAAI,SAAsB,EAAC;4BACrB,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,UAAU,CAAU,UAAU,CAAC,CAAC,YAAY,EAAE,CAAC;4BACrH,sBAAO,IAAI,EAAC;yBACb;;4BACI,sBAAO,IAAI,EAAC;;;;;KAClB;IAEK,uCAAS,GAAf,UAAgB,OAAgB;;;;;;;wBAM1B,UAAU,GAAY,IAAI,6DAAO,EAAE;wBAE1B,qBAAM,IAAI,CAAC,iBAAiB,EAAE;;wBAAvC,MAAM,GAAG,SAA8B;wBAC3C,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,WAAC;4BAC3D,UAAU,GAAG,CAAC,CAAC;4BACf,8BAA8B;4BAC9B,wBAAwB;4BACxB,8BAA8B;4BAC9B,oCAAoC;4BACpC,oCAAoC;4BACpC,oCAAoC;4BAEpC,IAAI,UAAU,CAAC,KAAK,IAAI,SAAS,EAAC;gCAChC,6BAA6B;gCAC7B,UAAU,CAAC,QAAQ,EAAE,CAAC;gCACtB,KAAI,CAAC,UAAU,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;6BACrC;iCACK;gCACJ,8BAA8B;gCAC9B,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;gCACrB,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;6BAClC;wBACH,CAAC,CAAC,CAAC;;;;;KACJ;IAEK,uCAAS,GAAf,UAAgB,IAAkB;;;;;;4BACnB,qBAAM,IAAI,CAAC,iBAAiB,EAAE;;wBAAvC,MAAM,GAAG,SAA8B;wBAC3C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAC;4BACrB,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE;wBACjG,CAAC,CAAC,CAAC;;;;;KAEJ;IAEO,wCAAU,GAAlB,UAAmB,MAAc,EAAE,SAAiB;QAClD,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;aAC3D,UAAU,CAAC,UAAU,CAAC;aACtB,GAAG,CAAC,SAAS,CAAC;aACd,eAAe,EAAE,CAAC,IAAI,CAAC,0DAAG,CACxB,iBAAO;YACN,IAAM,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAa,CAAC;YAC/C,IAAM,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;YAC9B,IAAM,MAAM,cAAI,EAAE,QAAK,IAAI,CAAC,CAAC;YAC7B,OAAO,MAAiB,CAAC;QAC3B,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAEO,+CAAiB,GAAzB;QACE,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC;QAC5C,IAAI,IAAI,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;;YACxB,OAAO,KAAK,CAAC;IACpB,CAAC;IAEO,wDAA0B,GAAlC;QACE,IAAI,IAAI,CAAC,iBAAiB;YAC1B,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IAEa,wCAAU,GAAxB;;;;;4BACgB,qBAAM,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC;4BAChE,WAAW,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE;yBAClC,CAAC;;wBAFE,OAAO,GAAG,SAEZ;wBACF,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;wBAC3C,oDAAoD;wBACpD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBAChC,sBAAO,OAAO,EAAC;;;;KAEhB;IAEO,uCAAS,GAAjB;QACE,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAC;YAC3B,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;aAEI;YACH,OAAO,IAAI,CAAC;YACZ,wCAAwC;YACxC,oBAAoB;SACrB;IAEH,CAAC;IAEa,+CAAiB,GAA/B;;;;;;wBACE,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;wBAC7C,IAAI,IAAI,CAAC,MAAM;4BAAE,sBAAO,IAAI,CAAC,MAAM,EAAC;wBAEvB,qBAAM,IAAI,CAAC,UAAU,EAAE;;wBAAhC,MAAM,GAAG,SAAuB;wBAEpC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;wBAC1C,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;wBAC/B,sBAAO,MAAM,CAAC,EAAE,EAAC;;;;KAClB;IAEO,4CAAc,GAAtB,UAAuB,MAAc;QACnC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC;YAC5F,QAAQ,EAAG,CAAC;YACZ,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;YACZ,EAAE,EAAE,EAAE;SACP,CAAC,CAAC;IACL,CAAC;IA1JU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAU6B,uEAAgB;OATlC,mBAAmB,CA4J/B;IAAD,0BAAC;CAAA;AA5J+B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXW;AACoC;AAO/E;IAEE,qBAAoB,EAAuB;QAAvB,OAAE,GAAF,EAAE,CAAqB;IAAI,CAAC;IAEhD,0BAAI,GAAJ,UAAK,IAAmB;QACtB,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;YAC1C,IAAI,EAAE,IAAI,CAAC,WAAW;YACtB,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;IACJ,CAAC;IAAA,CAAC;IAEF,yBAAG,GAAH,UAAI,GAAW;QACb,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;IACzC,CAAC;IAbU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGwB,yEAAmB;OAFhC,WAAW,CAcvB;IAAD,kBAAC;CAAA;AAduB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRuB;AACN;AAE+C;AACY;AAC1C;AACJ;AACQ;AACN;AACI;AACW;AACjB;AACT;AACM;AACA;AACa;AACN;AACH;AAqCvD;IAAA;IAA4B,CAAC;IAAhB,YAAY;QAnCxB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,2DAAW;gBACX,iEAAiB;gBACjB,iEAAc;gBACd,8EAAsB;gBACtB,wEAAqB;gBACrB,qEAAS,CAAC,OAAO,EAAE;aACpB;YACD,YAAY,EAAE;gBACZ,oGAAoB;gBACpB,gHAAwB;aACzB;YACD,OAAO,EAAE;gBACP,4DAAY;gBACZ,oGAAoB;gBACpB,gHAAwB;gBACxB,2DAAW;gBACX,iEAAiB;gBACjB,iEAAc;gBACd,8EAAsB;gBACtB,wEAAqB;gBACrB,qEAAS,CAAC,OAAO,EAAE,CAAC,QAAQ;aAC7B;YACD,SAAS,EAAE;gBACT,kEAAW;gBACX,sEAAS;gBACT,mEAAW;gBACX,0EAAe;gBACf,wEAAc;gBACd,mFAAmB;gBACnB,oEAAY;aACb;SACF,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ;;;;;;;;;;;;ACtDzB,mB;;;;;;;;;;;ACAA,iQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA6D;AACe;AAEjB;AAQ3D;IAKE,2BAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAF5D,SAAI,GAAiB,IAAI,wEAAY,CAAC,EAAE,CAAC;IAGzC,CAAC;IAEK,oCAAQ,GAAd;;;;;;4BACc,qBAAM,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE;;wBAAhD,KAAK,GAAG,SAAwC;wBACpD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,SAAS,CAAC,kBAAQ,IAAI,YAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAA7B,CAA6B,CAAC,CAAC;;;;;KAChF;IAED,uCAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAfU,iBAAiB;QAN7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAOyC,yFAAmB;OALjD,iBAAiB,CAgB7B;IAAD,wBAAC;CAAA;AAhB6B;;;;;;;;;;;;ACX9B,mB;;;;;;;;;;;ACAA,kD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;ACP9B,mB;;;;;;;;;;;ACAA,sD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;ACPlC,8BAA8B,kBAAkB,KAAK,C;;;;;;;;;;;ACArD,6YAA6Y,gBAAgB,kEAAkE,QAAQ,6C;;;;;;;;;;;;;;;;;;;;;;;;;ACA9a;AACU;AAOnE;IAKE,gCAAY,YAA6B;QACvC,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,MAAM,EAAE;IAE1C,CAAC;IAED,yCAAQ,GAAR;IACA,CAAC;IARkB;QAAlB,2DAAK,CAAC,UAAU,CAAC;;4DAAU;IAHjB,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAM0B,gFAAe;OAL9B,sBAAsB,CAalC;IAAD,6BAAC;CAAA;AAbkC;;;;;;;;;;;;ACRnC,mB;;;;;;;;;;;ACAA,8PAA8P,2V;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjM;AAGI;AAChB;AAG2B;AAEjB;AAO3D;IAUE,2BAAoB,WAA2B,EAAU,KAAoB,EAAU,WAAgC;QAErH,4DAA4D;QAC5D,6CAA6C;QAC7C,MAAM;QAJY,gBAAW,GAAX,WAAW,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAqB;QATvH,aAAQ,GAAc,EAAE,CAAC;QACzB,qBAAgB,GAAc,EAAE,CAAC;QAKjC,YAAO,GAAY,KAAK,CAAC;QACzB,SAAI,GAAiB,IAAI,wEAAY,CAAC,EAAE,CAAC;QAQvC,4CAA4C;QAC5C,4CAA4C;QAE5C,+CAA+C;QAC/C,iEAAiE;QACjE,qBAAqB;QACrB,MAAM;IACR,CAAC;IAEK,oCAAQ,GAAd;;;gBAEE,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,4CAA4C;gBAC5C,IAAI,CAAC,oBAAoB,EAAE,CAAC;;;;KAC7B;IAEO,4CAAgB,GAAxB;QAAA,iBAIC;QAHC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,WAAC;YACvD,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,0CAAc,GAAtB;QAAA,iBAKC;QAJC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,gBAAM;YACvC,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACvC,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAEa,wCAAY,GAA1B;;;;;;4BACgB,qBAAM,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;;wBAA1C,OAAO,GAAG,SAAgC;wBAC9C,IAAI,OAAO,IAAI,IAAI,EAAC;4BAClB,OAAO,CAAC,SAAS,CAAC,WAAC;gCACjB,KAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;4BACzB,CAAC,CAAC;yBACH;;;;;KACF;IAEO,gDAAoB,GAA5B;QAAA,iBAYC;QAXC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,WAAC;YAC/D,IAAI,CAAC,IAAI,IAAI,EAAC;gBACd,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,WAAC;oBAC/B,IAAI,CAAC,IAAI,IAAI,EAAC;wBACZ,CAAC,CAAC,SAAS,CAAC,WAAC;4BACX,KAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;wBACzB,CAAC,CAAC;qBACH;gBACH,CAAC,CAAC,CAAC;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAEO,uCAAW,GAAnB;QAAA,iBAIC;QAHC,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,KAAK,KAAI,CAAC,QAAQ,EAA5B,CAA4B,CAAC,CAAC,CAAC;YACzD,IAAI,CAAC,QAAQ,CAAC;IAChB,CAAC;IAED,uCAAW,GAAX;QACE,IAAI,IAAI,CAAC,YAAY;YACnB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAClC,IAAI,IAAI,CAAC,aAAa;YACtB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,IAAI,CAAC,aAAa;YACtB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;IAClC,CAAC;IAnFU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAWiC,8EAAc,EAAgB,8DAAc,EAAuB,yFAAmB;OAV5G,iBAAiB,CAqF7B;IAAD,wBAAC;CAAA;AArF6B;;;;;;;;;;;;AChB9B,mB;;;;;;;;;;;ACAA,kvD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAoE;AACxB;AAEe;AAEA;AACE;AACpB;AAOzC;IAQE,+BACU,WAAwB,EACxB,YAA0B,EAC1B,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QAPxB,aAAQ,GAAG,EAAE,CAAC;IASd,CAAC;IAEK,wCAAQ,GAAd;;;;gBACE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,EAAtB,CAAsB,CAAC;;;;KACzF;IAEK,0CAAU,GAAhB;;;;;;wBACM,KAAK,GAAG,IAAI,yDAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;wBAC7D,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBACN,qBAAM,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC;;wBAA7D,MAAM,GAAG,SAAoD;wBACjE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;;;;;KACpD;IAED,2CAAW,GAAX;QACE,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;IACtC,CAAC;IA1Bc;QAAd,2DAAK,CAAC,MAAM,CAAC;kCAAO,wEAAY;uDAAC;IAFvB,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAUuB,wEAAW;YACV,0EAAY;YAClB,sDAAM;OAXb,qBAAqB,CA8BjC;IAAD,4BAAC;CAAA;AA9BiC;;;;;;;;;;;;ACdlC,mB;;;;;;;;;;;ACAA,4JAA4J,wBAAwB,qKAAqK,YAAY,KAAK,SAAS,mDAAmD,qDAAqD,gKAAgK,gDAAgD,6D;;;;;;;;;;;;;;;;;;;;;;;;;ACAlnB;AACE;AAO3D;IAIE;IAEA,CAAC;IAJc;QAAd,2DAAK,CAAC,MAAM,CAAC;kCAAO,wEAAY;8DAAA;IAFtB,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;;OACW,4BAA4B,CASxC;IAAD,mCAAC;CAAA;AATwC;;;;;;;;;;;;ACRzC,8BAA8B,oBAAoB,qBAAqB,4BAA4B,+BAA+B,KAAK,C;;;;;;;;;;;ACAvI,2EAA2E,iBAAiB,mrBAAmrB,SAAS,iNAAiN,iDAAiD,qKAAqK,4CAA4C,uM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9qC;AACe;AAEjB;AAQ3D;IAOE,+BAAoB,WAAgC;QAAhC,gBAAW,GAAX,WAAW,CAAqB;QAFpD,SAAI,GAAiB,IAAI,wEAAY,CAAC,EAAE,CAAC,CAAC;IAGzC,CAAC;IAEI,wCAAQ,GAAd;;;;;;4BAGgB,qBAAM,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;;wBAA1C,OAAO,GAAG,SAAgC;wBAC9C,IAAI,OAAO,IAAI,IAAI,EAAC;4BAClB,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,SAAS,CAAC,WAAC;gCACrC,KAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC;gCACtB,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;4BACvD,CAAC,CAAC,CAAC;yBACF;wBAED,mDAAmD;wBACnD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,WAAC;4BAC/D,IAAI,CAAC,EAAC;gCACJ,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,IAAI,CAAE,WAAC;oCAC9B,CAAC,CAAC,SAAS,CAAC,WAAC;wCACX,KAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC;oCAC1B,CAAC,CAAC,CAAC;gCACL,CAAC,CAAC;6BACH;wBACH,CAAC,CAAC;;;;;KACH;IAED,yCAAS,GAAT;QACE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,2CAAW,GAAX;QACE,IAAI,IAAI,CAAC,YAAY,IAAI,SAAS;YAClC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChC,IAAI,IAAI,CAAC,aAAa,IAAI,SAAS;YACnC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;IA1CU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAQiC,yFAAmB;OAPzC,qBAAqB,CA4CjC;IAAD,4BAAC;CAAA;AA5CiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXO;AAEoC;AACc;AACZ;AACY;AACZ;AACwB;AACW;AACvB;AAE5C;AACgB;AACX;AA6BpD;IAAA;IAA8B,CAAC;IAAlB,cAAc;QA3B1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,kEAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC;oBACpB,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAiB,EAAC;oBACjD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,uGAAqB,EAAC;oBAE1D,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,2FAAiB,EAAE,WAAW,EAAC,CAAC,6EAAS,CAAC,EAAC;oBAC3E,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,2FAAiB,EAAE,WAAW,EAAE,CAAC,6EAAS,CAAC,EAAC;oBAC5E,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,uGAAqB,EAAE,WAAW,EAAC,CAAC,6EAAS,CAAC,EAAC;iBACxF,CAAC;aAEH;YACD,YAAY,EAAE;gBACZ,yFAAiB;gBACjB,uGAAqB;gBACrB,2FAAiB;gBACjB,uGAAqB;gBACrB,2FAAiB;gBACjB,mHAAsB;gBACtB,8HAA4B;gBAC5B,uGAAqB;aACtB;YACD,OAAO,EAAE;gBACP,yFAAiB;aAClB;SACF,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;;AC1C3B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE;QACR,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,8BAA8B;QAC1C,WAAW,EAAE,qCAAqC;QAClD,SAAS,EAAE,cAAc;QACzB,aAAa,EAAE,0BAA0B;QACzC,iBAAiB,EAAE,cAAc;KAClC;CACF,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACvBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminProductsComponent } from './components/admin-products/admin-products.component';\nimport { AdminOrdersComponent } from './components/admin-orders/admin-orders.component';\nimport { ProductFormComponent } from './components/product-form/product-form.component';\nimport { AdminAuthGuard } from './services/admin-auth-guard.service';\nimport { FormsModule } from '@angular/forms';\nimport { SharedModule } from 'shared/shared.module';\nimport { MatTableModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard } from 'shared/services/auth-guard.service';\n\n@NgModule({\n  imports: [    \n    SharedModule,\n    RouterModule.forChild([\n      { path: 'admin/products/new', component: ProductFormComponent, canActivate:[AuthGuard, AdminAuthGuard]},\n      { path: 'admin/products/:id', component: ProductFormComponent, canActivate:[AuthGuard, AdminAuthGuard]},\n      { path: 'admin/products', component: AdminProductsComponent, canActivate:[AuthGuard, AdminAuthGuard]},\n      { path: 'admin/orders', component: AdminOrdersComponent, canActivate:[AuthGuard, AdminAuthGuard]},\n    ]),\n  ],\n  declarations: [\n    AdminProductsComponent,\n    AdminOrdersComponent,\n    ProductFormComponent,\n  ],\n  providers: [    \n    AdminAuthGuard\n  ],\n  exports: [\n    //ProductFormComponent,\n  ]\n})\nexport class AdminModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"col\\\">\\n    <div class=\\\"row\\\">\\n        <table class=\\\"table\\\" *ngIf=\\\"orders$ | async as orders\\\">\\n            <thead>\\n                <tr>\\n                    <th class=\\\"font-bold\\\">Customer</th>\\n                    <th class=\\\"font-bold\\\">Date</th>\\n                    <th></th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let o of orders\\\">\\n                    <td>{{o.shipping.name}}</td>\\n                    <td>{{o.datePlaced}}</td>\\n                    <td>\\n                        <a [routerLink]=\\\"\\\">view</a>\\n                    </td>\\n                </tr>\\n            </tbody>\\n            <button class=\\\"btn btn-success\\\" (click)=getOrderByUser()>\\n                Filter by user\\n            </button>\\n        </table>                \\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"row\\\">\\n            <table class=\\\"table\\\" *ngIf=\\\"orderByUser$ | async as orderByUser\\\">\\n                <thead>\\n                    <tr>\\n                        <th class=\\\"font-bold\\\">Customer</th>\\n                        <th class=\\\"font-bold\\\">Date</th>\\n                        <th></th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let o of orderByUser\\\">\\n                        <td>{{o.shipping.name}}</td>\\n                        <td>{{o.datePlaced}}</td>\\n                        <td>\\n                            <a [routerLink]=\\\"\\\">view</a>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>                \\n        </div>\\n    </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from 'app/shared/services/order.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-admin-orders',\n  templateUrl: './admin-orders.component.html',\n  styleUrls: ['./admin-orders.component.css']\n})\nexport class AdminOrdersComponent implements OnInit {\n\n  orders$: Observable<any>;\n  orderByUser$: Observable<any>;\n\n  constructor(private orderService: OrderService) {\n\n  }\n\n  async ngOnInit() {\n    this.orders$ = await this.orderService.getAllOrders();    \n  }\n\n  async getOrderByUser(){\n    this.orderByUser$ = await this.orderService.getOrdersByUser('oZNV5PBkeua3DaIhTewQc6GwFur2');\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\r\\n    <a routerLink='/admin/products/new' class='btn btn-primary'>New Product</a>\\r\\n</p>\\r\\n<p>\\r\\n    <input\\r\\n    #query\\r\\n    (keyup)=\\\"filter(query.value)\\\"\\r\\n    type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\">\\r\\n</p>\\r\\n\\r\\n\\r\\n<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th sortable-collumn>Title</th>\\r\\n            <th>Price</th>\\r\\n            <th>Id</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let p of filteredProducts\\\">\\r\\n            <td>{{p.title}}</td>\\r\\n            <td>{{p.price + ' €'}}</td>\\r\\n            <td>{{p.id}}</td>\\r\\n            <td>\\r\\n                <a [routerLink]=\\\"[p.id]\\\">Edit</a>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\"","import { Component, OnInit, OnDestroy, Input, HostListener, ViewChild } from '@angular/core';\nimport { ProductService } from 'app/shared/services/product.service';\nimport { Observable, Subscription } from 'rxjs';\nimport { Product} from 'shared/models/product';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { map } from 'rxjs/operators';\n\n\n\n@Component({\n  selector: 'app-admin-products',\n  templateUrl: './admin-products.component.html',\n  styleUrls: ['./admin-products.component.css']\n})\nexport class AdminProductsComponent implements OnDestroy{\n    \n  productsCollection: AngularFirestoreCollection<any>;\n  products;\n  productsObjects: Product[];\n  filteredProducts: Product[];\n  data: any;\n  subscription: Subscription;\n  \n  constructor(private productService: ProductService) {\n    // this.subscription = this.productService.getAll().subscribe(products => this.filteredProducts = products)\n    this.products = this.productService.getAll().subscribe(x => {\n    this.productsObjects = this.filteredProducts = x;\n    });  \n  } \n\n  filter(query: string){\n    this.filteredProducts = (query)?\n    this.productsObjects.filter(p => p.title.toLowerCase().includes(query.toLowerCase())) :\n    this.productsObjects;\n  }\n  \n  ngOnDestroy(): void {\n   this.products.unsubscribe();\n  }    \n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n      <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"save(f.value)\\\">  \\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"title\\\">Title</label>\\n            <input #title=\\\"ngModel\\\" [(ngModel)]=\\\"product.title\\\" name=\\\"title\\\" id=\\\"title\\\" type=\\\"text\\\" class=\\\"form-control\\\" required>\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"title.touched && title.invalid\\\">\\n              The product's title is required\\n            </div>    \\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"price\\\">Price</label>\\n            <div class=\\\"input-group mb-3\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\">€</span>\\n              </div>\\n              <input #price=\\\"ngModel\\\" [(ngModel)]=\\\"product.price\\\" name=\\\"price\\\" id=\\\"price\\\" type=\\\"number\\\" class=\\\"form-control\\\" required [min]=\\\"0\\\">\\n              <div *ngIf=\\\"price.touched && price.invalid\\\" class=\\\"alert alert-danger input-group\\\">          \\n                <div *ngIf=\\\"price.errors.required\\\">\\n                    The Price is required\\n                </div>       \\n                <div *ngIf=\\\"price.errors?.min\\\">\\n                    The Price can't be negative...\\n                </div>\\n              </div>              \\n            </div>\\n          </div>\\n        \\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"category\\\">Category</label>\\n            <select #category=\\\"ngModel\\\" [(ngModel)]=\\\"product.category\\\" name=\\\"category\\\" id=\\\"category\\\" class=\\\"form-control\\\" required>\\n              <option value=\\\"\\\"></option>\\n              <option *ngFor=\\\"let c of categories$ | async\\\" value=\\\"{{c.id}}\\\">\\n                {{c.name}}\\n              </option>\\n            </select>\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"category.touched && category.invalid\\\">The category is required</div>\\n          </div>\\n        \\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"imageUrl\\\">Image URL</label>\\n            <input #imageUrl=\\\"ngModel\\\" [(ngModel)]=\\\"product.imageUrl\\\" name=\\\"imageUrl\\\" id=\\\"imageUrl\\\" type=\\\"text\\\" class=\\\"form-control\\\" required url>\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"imageUrl.touched && imageUrl.invalid\\\">\\n              <div *ngIf=\\\"imageUrl.errors?.url\\\" >Please enter a valid Url</div>\\n              <div *ngIf=\\\"imageUrl.errors.required\\\">The Url is required</div>\\n            </div>\\n          </div>\\n        \\n          <button type=\\\"submit\\\" class=\\\"btn btn-sucess\\\">Save</button>\\n          <button type=\\\"button\\\" (click)=\\\"delete()\\\" class=\\\"btn btn-danger\\\">Delete</button>          \\n      </form>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    <product-card [product]=\\\"product\\\" [showActions]=\\\"false\\\"></product-card>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CategoryService } from 'shared/services/category.service';\nimport { AngularFireList, AngularFireDatabase } from 'angularfire2/database';\nimport { Observable, Subscription } from 'rxjs';\nimport { ProductService } from 'app/shared/services/product.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { map, take } from 'rxjs/operators';\nimport { Product } from 'shared/models/product';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css']\n})\nexport class ProductFormComponent implements OnDestroy{\n\n  ngOnDestroy(): void {\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n\n  categories$;\n  product: Product = new Product();\n\n  id;\n  products;\n  test;\n  subscription: Subscription;\n\n  constructor(\n    private categoryService: CategoryService,\n    private productService: ProductService, \n    private router: Router,\n    private route: ActivatedRoute) {\n\n    this.categories$ = this.categoryService.getAll();\n\n    this.id = this.route.snapshot.paramMap.get('id');\n    if (this.id) {\n      this.subscription = this.productService.get(this.id).pipe((take(1))).subscribe(x => this.product = x)\n    }\n\n    }; \n\n  save(product){\n    if (this.id) {\n      this.productService.update(this.id, product)}\n    else{\n      this.productService.create(product);      \n    }\n\n    this.router.navigate(['admin/products']);\n  }\n\n  delete(){\n    if (confirm('Are you sure you want to delete this product?')){\n      this.productService.delete(this.id);\n      this.router.navigate(['admin/products']);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { AuthService } from 'shared/services/auth.service';\nimport * as firebase from 'firebase';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { map, switchMap } from 'rxjs/operators';\nimport { UserService } from 'shared/services/user.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminAuthGuard implements CanActivate{\n\n  constructor(private auth: AuthService, private db: AngularFireDatabase, private userService: UserService) { }\n  \n  canActivate():Observable<boolean> {\n    \n    return this.auth.appUser$.pipe(map(appUser => appUser.isAdmin))\n  }\n}\n","module.exports = \"\"","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://use.fontawesome.com/releases/v5.5.0/css/all.css\\\" integrity=\\\"sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU\\\" crossorigin=\\\"anonymous\\\">\\n\\n\\n<bs-navbar></bs-navbar>\\n\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component, OnDestroy } from '@angular/core';\nimport { AuthService } from 'shared/services/auth.service';\nimport { Router } from '@angular/router';\nimport { Subscription } from \"rxjs\";\nimport { UserService } from 'shared/services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnDestroy {\n  private subscription: Subscription\n\n  constructor(private auth: AuthService, private router: Router, private userService: UserService){\n    this.subscription = auth.user$.subscribe(user => {      \n      if (!user) return;\n\n      userService.save(user);\n\n      let returnUrl = localStorage.getItem('returnUrl');\n      if (!returnUrl) return;\n\n      localStorage.removeItem('returnUrl');\n      router.navigateByUrl(returnUrl)\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatFormFieldModule, MatInputModule, MatPaginatorModule, MatSortModule } from '@angular/material';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { environment } from 'environments/environment';\nimport { SharedModule } from 'shared/shared.module';\n\nimport { AdminModule } from './admin/admin.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './core/components/login/login.component';\nimport { CoreModule } from './core/core.module';\nimport { ProductsComponent } from './shopping/components/products/products.component';\nimport { ShoppingModule } from './shopping/shopping.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    CoreModule,\n    ShoppingModule,\n    AdminModule,   \n    SharedModule,\n    MatFormFieldModule, \n    MatInputModule, \n    MatPaginatorModule, \n    BrowserAnimationsModule,\n    MatSortModule,\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    \n    RouterModule.forRoot([\n      { path: '', component: ProductsComponent},\n      { path: 'login', component: LoginComponent},\n    ]),\n\n  ],\n  providers: [\n    \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\r\\n.dropdown-toggle {\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">OpShop</a>\\n    <!-- <i class=\\\"fab fa-envira\\\"></i> -->\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">      \\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/shopping-cart\\\">\\n              \\n            <i class=\\\"fas fa-shopping-cart\\\"></i>\\n            <span class=\\\"badge badge-warning badge-pill\\\" *ngIf=\\\"cart\\\">\\n              {{productQuantity}}\\n            </span>\\n          </a>\\n        </li>        \\n      </ul>  \\n      <ul class=\\\"navbar-nav\\\">  \\n          <ng-template #anonymousUser>\\n              <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Log in</a>\\n              </li>\\n          </ng-template>\\n    \\n          <li ngbDropdown *ngIf=\\\" appUser ; else anonymousUser\\\" class=\\\"nav-item dropdown\\\">\\n            <a ngbDropdownToggle class=\\\"nav-link dropdown-toggle\\\" id=\\\"dropdown01\\\" data-toggle=\\\"dropdown\\\"\\n            aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">\\n            {{appUser.name}}\\n            </a>\\n          <div ngbDropdownMenu class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdown01\\\">\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"/my/orders\\\">My Orders</a>\\n            <ng-container *ngIf=\\\"appUser.isAdmin\\\">\\n              <a class=\\\"dropdown-item\\\" routerLink=\\\"/admin/products\\\">Manage Products</a>\\n              <a class=\\\"dropdown-item\\\" routerLink=\\\"/admin/orders\\\">Manage Orders</a>          \\n            </ng-container>\\n            <a (click)=\\\"logout()\\\" class=\\\"dropdown-item\\\">Log Out</a>\\n          </div>\\n          </li>\\n          \\n        </ul> \\n    </div>\\n  </div>  \\n</nav>\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AppUser } from 'shared/models/app-user';\nimport { ShoppingCart } from 'shared/models/shopping-cart';\nimport { AuthService } from 'shared/services/auth.service';\nimport { ShoppingCartService } from 'shared/services/shopping-cart.service';\n\n@Component({\n  selector: 'bs-navbar',\n  templateUrl: './bs-navbar.component.html',\n  styleUrls: ['./bs-navbar.component.css']\n})\nexport class BsNavbarComponent implements OnDestroy, OnInit{\n\n  appUser : AppUser;\n  subscription: Subscription;\n  subscription1: Subscription;\n  subscription2: Subscription;\n  cart: ShoppingCart = new ShoppingCart([])\n  productQuantity: number = 0;\n  \n  constructor(private auth: AuthService, private shopService: ShoppingCartService) { \n  }\n\n  logout(){\n    this.auth.logout();\n    this.appUser = null;\n  }\n\n  async ngOnInit(){\n    this.subscription = this.auth.appUser$.subscribe(appUser => this.appUser = appUser);  \n    \n    let newCart = await this.shopService.getCart();\n    if (newCart != null){\n      this.subscription1 = newCart.subscribe(c => {\n      this.productQuantity = 0;\n      this.cart.products = c  \n      this.cart.products.forEach(element => {\n      this.productQuantity += element.quantity;\n      });          \n    });\n    }\n\n    this.subscription2 = this.shopService.isShoppingCart$.subscribe(x => {\n      if (x == true) {\n      this.shopService.getCart().then( c => {\n        if (c != null){\n          this.subscription1 = c.subscribe(c => {\n          this.productQuantity = 0;\n          this.cart.products = c  \n          this.cart.products.forEach(element => {\n          this.productQuantity += element.quantity;\n          });\n        });\n        }  \n      });     \n      }\n    })\n\n  }\n  \n  ngOnDestroy(){\n    this.subscription.unsubscribe()\n    this.subscription1.unsubscribe();\n    this.subscription2.unsubscribe();\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"\\n<products></products>\\n\"","import { Component} from '@angular/core';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent{ \n\n}\n","module.exports = \"\"","module.exports = \"<button (click)='login()'\\n  type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\n  Login with Google\\n</button>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'shared/services/auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent{\n\n  constructor(private auth: AuthService, private router: Router) {\n   }\n\n  login(){\n    this.auth.login();\n    this.router.navigate(['']);\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsNavbarComponent } from './components/bs-navbar/bs-navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SharedModule } from 'shared/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { ShoppingModule } from 'app/shopping/shopping.module';\n\n@NgModule({\n  imports: [    \n    SharedModule,\n    ShoppingModule,\n    RouterModule,\n  ],\n  declarations: [    \n    BsNavbarComponent,\n    HomeComponent,    \n    LoginComponent,\n  ],\n  exports: [\n    BsNavbarComponent,\n  ]\n})\nexport class CoreModule { }\n","module.exports = \".card-footer{\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.card{\\r\\n    margin-bottom: 25px\\r\\n}\"","module.exports = \"\\n<div class=\\\"card\\\" *ngIf=\\\"product.title\\\">\\n  <img class=\\\"card-img-top cropped\\\" alt=\\\"{product.title}\\\"  [src]=\\\"product.imageUrl\\\" *ngIf=\\\"product.imageUrl\\\">\\n  <div class=\\\"card-body\\\">\\n    <h4 class=\\\"card-title\\\">{{product.title}}</h4>\\n    <p class=\\\"card-text\\\">{{ product.price | currency:'EUR':'symbol'}} </p>\\n  </div>\\n  <div class=\\\"card-footer\\\" *ngIf=\\\"showActions\\\">\\n    <button \\n    *ngIf=\\\"this.shoppingCart.getQuantity(product) == 0; else updateQuantity\\\"\\n      (click)=\\\"addToCart()\\\"\\n      class=\\\"btn btn-secondary btn-block\\\"\\n      >\\n      Add To Cart\\n    </button>  \\n    <ng-template #updateQuantity>\\n        <product-quantity [product]=\\\"this.product\\\" [shoppingCart]=\\\"this.shoppingCart\\\" *ngIf=\\\"this.shoppingCart\\\">                  \\n          </product-quantity>\\n    </ng-template>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Product } from 'shared/models/product';\nimport { ShoppingCartService } from 'app/shared/services/shopping-cart.service';\nimport { ShoppingCart } from 'shared/models/shopping-cart';\n\n@Component({\n  selector: 'product-card',\n  templateUrl: './product-card.component.html',\n  styleUrls: ['./product-card.component.css']\n})\nexport class ProductCardComponent{\n\n  @Input('product') product: Product;\n  @Input('showActions') showActions: boolean = true;\n  @Input('shoppingCart') shoppingCart: ShoppingCart;\n\n  constructor(private shoppingCartService: ShoppingCartService) {\n  }\n\n  addToCart(){\n    this.shoppingCartService.addToCart(this.product);    \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row no-gutters\\\">\\n    <div class=\\\"col-2\\\">\\n      <button\\n      (click)=\\\"removeProduct()\\\"\\n      class=\\\"btn btn-secondary btn-block\\\">-</button>\\n    </div>\\n    <div class=\\\"col text-center my-auto\\\">\\n      {{ this.shoppingCart.getQuantity(product) }} in cart\\n    </div>\\n    <div class=\\\"col-2\\\">\\n      <button  \\n      (click)=\\\"addToCart()\\\"\\n      class=\\\"btn btn-secondary btn-block\\\">+</button>\\n    </div>\\n  </div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Product } from 'shared/models/product';\nimport { ShoppingCart } from 'shared/models/shopping-cart';\nimport { ShoppingCartService } from 'shared/services/shopping-cart.service';\n\n@Component({\n  selector: 'product-quantity',\n  templateUrl: './product-quantity.component.html',\n  styleUrls: ['./product-quantity.component.css']\n})\nexport class ProductQuantityComponent{\n\n  @Input('product') product: Product;\n  @Input('shoppingCart') shoppingCart: ShoppingCart;\n\n  constructor(private shoppingCartService: ShoppingCartService) {\n  }\n\n\n  addToCart(){\n    this.shoppingCartService.addToCart(this.product);    \n  }\n\n  removeProduct(){    \n    this.shoppingCartService.removeProduct(this.product);    \n  }\n\n}\n","import { ShoppingCart } from \"./shopping-cart\";\r\n\r\nexport class Order{\r\n\r\n    datePlaced;\r\n    products: any[];\r\n\r\n    private getDate(){\r\n      let today = new Date();\r\n      let day;\r\n      let month;\r\n      let year\r\n      let dd = today.getDate();\r\n      day = dd\r\n      let mm = today.getMonth()+1;\r\n      month = mm //January is 0!\r\n\r\n      year = today.getFullYear();\r\n      if(dd<10){\r\n        day ='0'+dd;\r\n      } \r\n      if(mm<10){\r\n        month='0'+mm;\r\n      } \r\n      let todayDate = day+'/'+month+'/'+year;\r\n      return todayDate;\r\n    }\r\n\r\n      constructor(public userId: string, public shipping: any, shoppingCart: ShoppingCart){\r\n        this.datePlaced = this.getDate();   \r\n\r\n        this.products = shoppingCart.products.map(i => {\r\n          return {\r\n            product:{\r\n              title: i.title,\r\n              imageUrl: i.imageUrl,\r\n              price: i.price,\r\n            },\r\n            quantity: i.quantity,\r\n            totalPrice: i.price*i.quantity\r\n          }\r\n        })\r\n      }   \r\n}","\r\nexport class Product{\r\n    \r\nid: string;\r\ntitle: string;\r\nprice: number;\r\ncategory: string;\r\nimageUrl: string;\r\nquantity: number;\r\n\r\n}","import { Product } from \"./product\";\r\nimport { OnInit } from \"@angular/core\";\r\nimport { ShoppingCartService } from \"shared/services/shopping-cart.service\";\r\n\r\nexport class ShoppingCart{\r\n\r\n\r\n    constructor(public products: Product[]){\r\n    }\r\n    \r\n    //get the total quantity of products\r\n    productQuantity(){\r\n        let result = 0; \r\n        this.products.forEach(element => {\r\n            result += element.quantity;\r\n        })\r\n        return result;\r\n    }\r\n\r\n    //get the total quantity of a product\r\n    getQuantity(product: Product) {\r\n        let item = this.products.find(x => x.id === product.id);\r\n        return item? item.quantity : 0;\r\n    }\r\n\r\n    //get the total price of a product\r\n    getTotalPriceItem(product: Product){\r\n        let item = this.products.find(x => x.id === product.id);\r\n        return item.price*item.quantity;\r\n    }\r\n\r\n    getTotalPrice(){\r\n        let totalPrice = 0;\r\n        this.products.forEach(p => {\r\n            totalPrice += p.price*p.quantity\r\n        });\r\n        return totalPrice;\r\n    }   \r\n\r\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from 'shared/services/auth.service';\nimport { map } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport * as Rx from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate{\n\n  constructor(private auth: AuthService, private router: Router) { }\n  \n  canActivate(route, state:RouterStateSnapshot){\n\n    return this.auth.user$.pipe(map(user => {\n      if (user) return true;  \n\n      this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}}); //Permet d'enregistrer l'url de la page demandée\n      return false;\n    }));\n\n    \n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport * as firebase from 'firebase';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppUser } from 'shared/models/app-user';\nimport { Observable, of } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\nimport { UserService } from 'shared/services/user.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  user$: Observable<firebase.User>;\n\n  constructor(\n      private afAuth: AngularFireAuth,\n      private route: ActivatedRoute,\n      private db: AngularFireDatabase,\n      private userService: UserService\n      ) {\n    this.user$ = afAuth.authState;\n   }\n\n  login(){\n    let returnUrl = this.route.snapshot.queryParamMap.get('returnUrl') || '/'; \n    localStorage.setItem('returnUrl', returnUrl); // Stock l'url en attente chez le client.\n\n    this.afAuth.auth.signInWithRedirect(new firebase.auth.GoogleAuthProvider)\n    .then()\n  }\n\n  logout(){\n    this.afAuth.auth.signOut();\n  }\n\n  get appUser$() : Observable<AppUser> {\n    return this.user$.pipe(\n      switchMap(user => {\n        if (user) return this.userService.get(user.uid).valueChanges();\n        return of(null);\n      } )\n      );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  categories;\n\n  constructor(private db: AngularFirestore) {\n    \n   }\n\n   getAll(){\n    // return this.db.collection('/categories', ref => ref.orderBy('name'));  \n    return this.db.collection('/categories/', ref => ref.orderBy('name')).snapshotChanges().pipe(map\n      (actions => actions.map(a => {\n        const data = a.payload.doc.data(name)\n        const id = a.payload.doc.id;\n        const result = {id, ...data};\n        // console.log(result)\n        return result;\n      })))\n   }\n\n}\n","import { Injectable, Query } from '@angular/core';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { ShoppingCartService } from 'shared/services/shopping-cart.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  constructor(private dbStore: AngularFirestore, private shoppingCartService: ShoppingCartService) { }\n\n  async placeOrder(order, cart){\n    let orderId = await this.dbStore.collection('orders').add(Object.assign({},order));    \n    this.shoppingCartService.clearCart(cart);\n    return orderId;\n  }\n\n  async getAllOrders(){\n    let orders = await this.dbStore.collection('orders').valueChanges();\n    return orders;\n  }\n\n  async getOrdersByUser(userIdPassed: string){\n    let orders = await this.dbStore.collection('orders', ref => {return ref.where('userId', '==', userIdPassed)}).valueChanges();\n    return orders;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ProductFormComponent } from '../../admin/components/product-form/product-form.component';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { map } from 'rxjs/operators';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Product} from 'shared/models/product';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  productsCollection: AngularFirestoreCollection<any>;\n  products;\n  productsObjects: Product[];\n  filteredProducts: Product[];\n\n\n  constructor(private dbStore: AngularFirestore) { }\n\n  create(product){\n    return this.dbStore.collection('/products').add(product);    \n  }\n\n  getAll(){\n    this.productsCollection = this.dbStore.collection<Product>('products/');\n    return this.productsCollection.snapshotChanges().pipe(map\n      (actions => actions.map(a => {\n        const data = a.payload.doc.data() as Product;\n        const id = a.payload.doc.id;\n        const result = {id, ...data};\n        return result;\n      })))\n  }\n\n  get(productId){\n    // return this.product;\n    return this.dbStore.collection('products').doc(productId).snapshotChanges().pipe(map\n      (actions => {\n        const data = actions.payload.data() as Product;\n        const id = actions.payload.id;\n        const result = {id, ...data};\n        return result as Product;\n      }));\n    \n    // let product = productsList.where('Title', '==', 'Bread')\n    //let product = this.dbStore.doc('products').ref(x => x.where('title', '==', 'Bread'));\n    // return this.dbStore.collection('products/', ref => ref.where('price', '==', '2.3'));\n    \n  }\n\n  update(productId, product){\n    this.dbStore.doc('/products/' + productId).update(product);\n  }\n\n  delete(productId){\n    this.dbStore.doc('/products/' + productId).delete();\n  }\n\n\n}\n","import { Injectable, Output } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\nimport { Product } from 'shared/models/product';\nimport { map, take } from 'rxjs/operators';\nimport { Subscription, Observable, BehaviorSubject } from 'rxjs';\nimport { ShoppingCart } from 'shared/models/shopping-cart';\nimport { EventEmitter } from 'protractor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingCartService {\n\n  fakeProduct: Product = new Product();\n  cartId: string;\n  subscription1 : Subscription\n  private _isShoppingCart = new BehaviorSubject<boolean>(false);\n  isShoppingCart$ = this._isShoppingCart.asObservable();\n\n\n  constructor(private dbStore: AngularFirestore) {\n    this.cartId = localStorage.getItem('cartId');\n   }\n\n   \n\n  addProduct(product: Product, cartId: string){\n    let object: Object;\n    object = product;\n    this.dbStore.collection('shopping-carts').doc(cartId).collection('products').doc(product.id).set(object);\n    this.dbStore.collection('shopping-carts').doc(cartId).collection('products').doc('empty').delete();  \n  }\n\n  async removeProduct(product: Product){\n    // Si le produit a pour quantité 1, le supprimer de la BDD\n    // Si le produit a une quantié > 1, diminuer quantité de 1, insérer le produit.\n    let newProduct: Product;\n    this.GetOrCreateCartId();\n    this.getProduct(this.cartId, product.id).pipe(take(1)).subscribe(p => {\n      newProduct = p\n\n      if (newProduct.quantity > 1){\n        newProduct.quantity = newProduct.quantity - 1;\n        this.dbStore.collection('shopping-carts').doc(this.cartId).collection('products').doc(product.id).set(newProduct);\n      }\n      else if (newProduct.quantity == 1)\n        this.dbStore.collection('shopping-carts').doc(this.cartId).collection('products').doc(product.id).delete();\n    })\n  }\n\n  async getCart(){\n    if (await this.getCartId()){\n      let cart = this.dbStore.collection('shopping-carts').doc(this.cartId).collection<Product>('products').valueChanges();\n      return cart;\n    }\n    else return null;\n  }\n\n  async addToCart(product: Product){\n    //Checker si panier existe, si oui, récupérer son ID, si non, le créer et récupérer son ID; OK\n    //Checker si le produit est déjà dans le panier\n    //S'il n'y est pas, l'insérer avec quantité = 1\n    //S'il y est déjà, le sortir, augmenter sa quantité de 1 et l'insérer.\n\n    let newProduct: Product = new Product()\n    \n    let cartId = await this.GetOrCreateCartId();    \n    this.getProduct(cartId, product.id).pipe(take(1)).subscribe(x => {\n      newProduct = x;\n      // newProduct.title = x.title;\n      // newProduct.id = x.id;\n      // newProduct.price = x.price;\n      // newProduct.category = x.category;\n      // newProduct.imageUrl = x.imageUrl;\n      // newProduct.quantity = x.quantity;\n\n      if (newProduct.title != undefined){\n        //Item is already in the cart\n        newProduct.quantity++;\n        this.addProduct(newProduct, cartId);\n      }        \n      else  {\n        //Item is not is the cart     \n        product.quantity = 1;\n        this.addProduct(product, cartId);\n      }\n    });        \n  } \n\n  async clearCart(cart: ShoppingCart){\n    let cartId = await this.GetOrCreateCartId();\n    cart.products.forEach(p => {\n      this.dbStore.collection('shopping-carts').doc(cartId).collection('products').doc(p.id).delete()\n    });  \n\n  }\n\n  private getProduct(cartId: string, productId: string){    \n    return this.dbStore.collection('shopping-carts').doc(cartId)\n    .collection('products')\n    .doc(productId)\n    .snapshotChanges().pipe(map\n      (actions => {\n        const data = actions.payload.data() as Product;\n        const id = actions.payload.id;\n        const result = {id, ...data};\n        return result as Product;\n      }));\n  }\n\n  private checkIfCartExists(): boolean {\n    this.cartId = localStorage.getItem('cartId')\n    if (this.cartId) return true;\n    else return false;\n  }\n\n  private removeCartFromLocalStorage(){\n    if (this.checkIfCartExists)\n    localStorage.removeItem('cartId');\n  }\n\n  private async createCart(){\n    let newCart = await this.dbStore.collection('shopping-carts').add({\n      dateCreated: new Date().getTime()\n    })\n    localStorage.setItem('cartId', newCart.id);\n    //Envoi un message quand le nouveau cart a été créé.\n    this._isShoppingCart.next(true);\n    return newCart;  \n    // return result;\n  }\n\n  private getCartId(){\n    if (this.checkIfCartExists()){\n      return this.cartId;    \n    }\n\n    else {\n      return null;\n      // let newCart = await this.createCart()\n      // return newCart.id\n    }\n    \n  }\n\n  private async GetOrCreateCartId() {\n    this.cartId = localStorage.getItem('cartId');\n    if (this.cartId) return this.cartId;\n\n    let result = await this.createCart()\n    \n    localStorage.setItem('cartId', result.id);\n    this.createProducts(result.id);\n    return result.id;\n  }\n\n  private createProducts(cartId: string){\n    this.dbStore.collection('shopping-carts').doc(cartId).collection('products').doc('empty').set({\n      quantity : 0,\n      title: '',\n      price: 0,\n      category: '',\n      imageUrl: '',\n      id: ''\n    });\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireObject } from 'angularfire2/database';\nimport * as firebase from 'firebase';\nimport { AppUser } from 'shared/models/app-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private db: AngularFireDatabase) { }\n\n  save(user: firebase.User){\n    this.db.object('/users/' + user.uid).update({\n      name: user.displayName,\n      email: user.email\n    })\n  };\n\n  get(uid: string): AngularFireObject<AppUser>{\n    return this.db.object('/users/' + uid);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ProductCardComponent } from './components/product-card/product-card.component';\nimport { ProductQuantityComponent } from './components/product-quantity/product-quantity.component';\nimport { AuthGuard } from './services/auth-guard.service';\nimport { AuthService } from './services/auth.service';\nimport { CategoryService } from './services/category.service';\nimport { OrderService } from './services/order.service';\nimport { ProductService } from './services/product.service';\nimport { ShoppingCartService } from './services/shopping-cart.service';\nimport { UserService } from './services/user.service';\nimport { FormsModule } from '@angular/forms';\nimport { CustomFormsModule } from 'ng2-validation';\nimport { MatTableModule } from '@angular/material';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    CustomFormsModule,\n    MatTableModule,\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    NgbModule.forRoot(),\n  ],\n  declarations: [    \n    ProductCardComponent,\n    ProductQuantityComponent,\n  ],\n  exports: [\n    CommonModule,\n    ProductCardComponent,\n    ProductQuantityComponent,\n    FormsModule,\n    CustomFormsModule,\n    MatTableModule,\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    NgbModule.forRoot().ngModule,\n  ],\n  providers: [\n    AuthService,\n    AuthGuard,\n    UserService,\n    CategoryService,\n    ProductService,\n    ShoppingCartService,\n    OrderService\n  ]\n})\nexport class SharedModule { }\n","module.exports = \"\"","module.exports = \"<h2>Shipping</h2>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n      <shipping-form [cart]=\\\"cart\\\"></shipping-form>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <shopping-cart-summary [cart]=\\\"cart\\\"></shopping-cart-summary>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ShoppingCartService } from 'shared/services/shopping-cart.service';\nimport { Subscription } from 'rxjs';\nimport { ShoppingCart } from 'shared/models/shopping-cart';\n\n@Component({\n  selector: 'app-check-out',\n  templateUrl: './check-out.component.html',\n  styleUrls: ['./check-out.component.css']\n})\n\nexport class CheckOutComponent implements OnInit, OnDestroy{\n    \n  subscription: Subscription\n  cart: ShoppingCart = new ShoppingCart([])\n\n  constructor(private shoppingCartService: ShoppingCartService){    \n  }\n\n  async ngOnInit(){\n    let cart$ = await this.shoppingCartService.getCart();\n    this.subscription = cart$.subscribe(products => this.cart.products = products);\n  }   \n\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  my-orders works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-orders',\n  templateUrl: './my-orders.component.html',\n  styleUrls: ['./my-orders.component.css']\n})\nexport class MyOrdersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  order-success works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order-success',\n  templateUrl: './order-success.component.html',\n  styleUrls: ['./order-success.component.css']\n})\nexport class OrderSuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".sticky-top{\\r\\n    top: 80px;\\r\\n}\"","module.exports = \"<div class=\\\"sticky-top\\\">\\n  <div class=\\\"list-group\\\">\\n    <a \\n    class=\\\"list-group-item list-group-item-action\\\"\\n    routerLink=\\\"/\\\"\\n    [class.active]=\\\"!category\\\"\\n    >      \\n      All Products     \\n    </a>\\n\\n    <a \\n    class=\\\"list-group-item list-group-item-action\\\" \\n    *ngFor=\\\"let c of categories$ | async\\\"\\n    routerLink=\\\"/\\\"\\n    [queryParams]=\\\"{category : c.id}\\\"\\n    [class.active]=\\\"category == c.id\\\"\\n    >      \\n      {{c.name}}      \\n    </a>      \\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { CategoryService } from 'shared/services/category.service';\n\n@Component({\n  selector: 'product-filter',\n  templateUrl: './product-filter.component.html',\n  styleUrls: ['./product-filter.component.css']\n})\nexport class ProductFilterComponent implements OnInit {\n\n  categories$;\n  @Input('category') category;\n\n  constructor(categService: CategoryService) { \n    this.categories$ = categService.getAll()\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-3\\\">\\n    <product-filter [category]='category'></product-filter>    \\n  </div>\\n  <div class=\\\"col-9\\\">\\n      <div class=\\\"row\\\">\\n        <ng-container *ngFor=\\\"let product of filteredProducts; let i = index\\\">\\n          <div class=\\\"col\\\">\\n            <product-card [product]=\\\"product\\\" [showActions]=\\\"true\\\" [shoppingCart]=\\\"cart\\\" *ngIf=\\\"cart != undefined\\\"></product-card>\\n          </div>\\n          <div *ngIf=\\\"(i + 1) % 2 === 0\\\" class=\\\"w-100\\\"></div>\\n        </ng-container>  \\n      </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n  \\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Product } from 'shared/models/product';\nimport { Subscription } from 'rxjs';\nimport { ProductService } from 'shared/services/product.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FirebaseFirestore } from 'angularfire2';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { ShoppingCartService } from 'shared/services/shopping-cart.service';\nimport { take } from 'rxjs/operators';\nimport { ShoppingCart } from 'shared/models/shopping-cart';\n\n@Component({\n  selector: 'products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnDestroy {\n  products: Product[] = [];\n  filteredProducts: Product[] = [];\n  category;\n  subscription: Subscription\n  subscription1: Subscription\n  subscription2: Subscription\n  isFalse: Boolean = false;\n  cart: ShoppingCart = new ShoppingCart([])\n\n  constructor(private prodService: ProductService, private route:ActivatedRoute, private shopService: ShoppingCartService)\n  {    \n    // this.subscription = prodService.getAll().subscribe(p => {\n    // this.products = this.filteredProducts = p;\n    // });\n\n    // route.queryParamMap.subscribe(params => {\n    //   this.category = params.get('category');\n\n    //   this.filteredProducts = (this.category) ? \n    //     this.products.filter(p => p.category === this.category) : \n    //     this.products;\n    // });\n  }\n\n  async ngOnInit() {\n\n    this.populateProducts();  \n    this.filterProducts(); \n    this.populateCart();\n    // Recoit un message quand un cart est créé.\n    this.listenToCartCreation();\n  }\n\n  private populateProducts(){\n    this.subscription = this.prodService.getAll().subscribe(p => {\n      this.products = this.filteredProducts = p;\n      });\n  }\n\n  private filterProducts(){\n    this.route.queryParamMap.subscribe(params => {\n      this.category = params.get('category');\n      this.applyFilter();    \n    });   \n  } \n\n  private async populateCart(){\n    let newCart = await this.shopService.getCart();\n    if (newCart != null){\n      newCart.subscribe(x => {\n        this.cart.products = x;\n      })\n    }\n  }\n\n  private listenToCartCreation(){\n    this.subscription2 = this.shopService.isShoppingCart$.subscribe(x => {\n      if (x == true){\n      this.shopService.getCart().then(p => {\n        if (p != null){\n          p.subscribe(x => {\n            this.cart.products = x;  \n          })\n        }\n      });      \n      }\n    })\n  }\n\n  private applyFilter(){\n    this.filteredProducts = (this.category) ? \n    this.products.filter(p => p.category === this.category) : \n    this.products;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription)\n      this.subscription.unsubscribe();\n    if (this.subscription1)\n    this.subscription1.unsubscribe();\n    if (this.subscription2)\n    this.subscription2.unsubscribe()\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form #f=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"\\\">Name</label>\\n      <input #name=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]=\\\"shipping.name\\\" type=\\\"text\\\" class=\\\"form-control\\\" required>\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"name.touched && name.invalid\\\">\\n        <div *ngIf=\\\"name.errors.required\\\">Name is required.</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"\\\">Address</label>\\n      <input #addressLine1=\\\"ngModel\\\" name=\\\"addressLine1\\\" [(ngModel)]=\\\"shipping.addressLine1\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Line 1\\\" required>\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"addressLine1.touched && addressLine1.invalid\\\">\\n        <div *ngIf=\\\"addressLine1.errors.required\\\">Address Line 1 is required.</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"\\\"></label>\\n      <input #addressLine2=\\\"ngModel\\\" name=\\\"addressLine2\\\" [(ngModel)]=\\\"shipping.addressLine2\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Line 2\\\" required>\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"addressLine2.touched && addressLine2.invalid\\\">\\n        <div *ngIf=\\\"addressLine2.errors.required\\\">Address Line 2 is required.</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"\\\">City</label>\\n      <input #city=\\\"ngModel\\\" name=\\\"city\\\" [(ngModel)]=\\\"shipping.city\\\" type=\\\"text\\\" class=\\\"form-control\\\" required>\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"city.touched && city.invalid\\\">\\n        <div *ngIf=\\\"city.errors.required\\\">City is required.</div>\\n      </div>\\n    </div>\\n    <button \\n      [disabled]=\\\"!f.valid\\\"\\n      class=\\\"btn btn-primary\\\">Place Order</button>\\n  </form>\"","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Order } from 'shared/models/order';\nimport { Subscription } from 'rxjs';\nimport { ShoppingCart } from 'shared/models/shopping-cart';\nimport { ShoppingCartService } from 'shared/services/shopping-cart.service';\nimport { AuthService } from 'shared/services/auth.service';\nimport { OrderService } from 'shared/services/order.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'shipping-form',\n  templateUrl: './shipping-form.component.html',\n  styleUrls: ['./shipping-form.component.css']\n})\nexport class ShippingFormComponent implements OnInit, OnDestroy{\n\n  @Input('cart') cart: ShoppingCart;\n  \n  shipping = {}; \n  UserSubscription: Subscription;\n  userId: string;\n\n  constructor( \n    private authService: AuthService,\n    private orderService: OrderService,\n    private router: Router\n    ){\n  }\n\n  async ngOnInit(){\n    this.UserSubscription = this.authService.user$.subscribe(user => this.userId = user.uid)\n  }   \n\n  async placeOrder() {\n    let order = new Order(this.userId, this.shipping, this.cart);\n    console.log(order);\n    let result = await this.orderService.placeOrder(order, this.cart);\n    this.router.navigate(['/order-success', result.id])\n  }\n  \n  ngOnDestroy(){\n    this.UserSubscription.unsubscribe();\n  }\n\n}\n\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">Order Summary</h5>\\n    <p class=\\\"card-text\\\">You have {{cart.productQuantity()}} items in your shopping cart.</p>\\n    <ul class=\\\"list-group list-group-flush\\\">\\n      <li class=\\\"list-group-item\\\" *ngFor=\\\"let p of cart.products\\\">\\n        {{p.quantity}} x {{p.title}}\\n        <div class=\\\"float-right\\\">\\n          {{cart.getTotalPriceItem(p) | currency:'EUR':'symbol'}}\\n        </div>\\n      </li>\\n      <li class=\\\"list-group-item font-weight-bold\\\">\\n        Total Price\\n          <div class=\\\"float-right\\\">\\n            {{cart.getTotalPrice() | currency:'EUR':'symbol'}}\\n          </div>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ShoppingCart } from 'shared/models/shopping-cart';\n\n@Component({\n  selector: 'shopping-cart-summary',\n  templateUrl: './shopping-cart-summary.component.html',\n  styleUrls: ['./shopping-cart-summary.component.css']\n})\nexport class ShoppingCartSummaryComponent{\n\n  @Input('cart') cart: ShoppingCart\n\n  constructor(){\n\n  }\n\n\n}\n","module.exports = \".thumbnail {\\r\\n    width: 80px;\\r\\n    height: 80px;\\r\\n    border-radius: 100%;\\r\\n    background-size: cover;\\r\\n}\"","module.exports = \"<h1>Shopping Cart</h1>\\n<p *ngIf=\\\"cart\\\">\\n  There is {{productQuantity}} items in your cart\\n  <button\\n    *ngIf=\\\"cart.products.length\\\"\\n    class=\\\"btn btn-light btn-small\\\" (click)=\\\"clearCart()\\\">Clear Shopping Cart\\n</button>\\n</p>\\n<div class=\\\"row col-10\\\">  \\n    <table class=\\\"table\\\">\\n    <thead>\\n    <tr>\\n        <th></th>\\n        <th sortable-collumn>Product</th>\\n        <th class=\\\"text-center\\\" style=\\\"width: 230px\\\">Quantity</th>\\n        <th class=\\\"text-right\\\" style=\\\"width: 200px\\\">Total Price</th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr *ngFor=\\\"let p of cart.products\\\">\\n        <td>\\n            <div [style.backgroundImage]=\\\"'url(' + p.imageUrl + ')'\\\" class=\\\"thumbnail\\\" alt=\\\"\\\"></div>\\n        </td>\\n        <td>{{p.title}}</td>\\n        <td>\\n            <product-quantity [product]=\\\"p\\\" [shoppingCart]=\\\"cart\\\" *ngIf=\\\"cart\\\">                  \\n            </product-quantity>\\n        </td>\\n        <td class=\\\"text-right\\\">{{this.cart.getTotalPriceItem(p) | currency:'EUR'}}</td>\\n    </tr>\\n    </tbody>\\n    <tfoot>\\n    <tr>\\n        <th></th>\\n        <th></th>\\n        <th></th>\\n        <th class=\\\"text-right\\\">\\n        Total : {{this.cart.getTotalPrice() | currency:'EUR'}}            \\n        </th>\\n    </tr>\\n    </tfoot>\\n    </table>\\n    <a \\n        *ngIf=\\\"cart.products.length\\\"\\n        class=\\\"btn btn-primary\\\" routerLink=\\\"/check-out\\\">Check Out</a>\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ShoppingCartService } from 'shared/services/shopping-cart.service';\nimport { Subscription, Observable } from 'rxjs';\nimport { ShoppingCart } from 'shared/models/shopping-cart';\nimport { Product } from 'shared/models/product';\n\n@Component({\n  selector: 'shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit, OnDestroy {\n  \n  subscription: Subscription;\n  subscription1: Subscription;\n  productQuantity;\n  cart: ShoppingCart = new ShoppingCart([]);\n\n  constructor(private shopService: ShoppingCartService) {\n   }\n\n  async ngOnInit() {\n\n    //Peuple le shopping cart de la session en cours.\n    let newCart = await this.shopService.getCart();\n    if (newCart != null){\n      this.subscription = newCart.subscribe(c => {\n        this.cart.products = c\n        this.productQuantity = this.cart.productQuantity();\n    });\n    }\n\n    //Permet de savoir quand un noveau cart a été créé.\n    this.subscription1 = this.shopService.isShoppingCart$.subscribe(x => {\n      if (x){\n        this.shopService.getCart().then( p => {\n            p.subscribe(p => {\n              this.cart.products = p\n          });\n        })\n      }\n    })\n  }\n\n  clearCart(){    \n    this.shopService.clearCart(this.cart);\n  }\n\n  ngOnDestroy(){\n    if (this.subscription != undefined)\n    this.subscription.unsubscribe();\n    if (this.subscription1 != undefined)\n    this.subscription1.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductsComponent } from './components/products/products.component';\nimport { ShoppingCartComponent } from './components/shopping-cart/shopping-cart.component';\nimport { CheckOutComponent } from './components/check-out/check-out.component';\nimport { OrderSuccessComponent } from './components/order-success/order-success.component';\nimport { MyOrdersComponent } from './components/my-orders/my-orders.component';\nimport { ProductFilterComponent } from './components/products/product-filter/product-filter.component';\nimport { ShoppingCartSummaryComponent } from './components/shopping-cart-summary/shopping-cart-summary.component';\nimport { ShippingFormComponent } from './components/shipping-form/shipping-form.component';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard } from 'shared/services/auth-guard.service';\nimport { SharedModule } from 'shared/shared.module';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([      \n      { path: 'products', component: ProductsComponent},\n      { path: 'shopping-cart', component: ShoppingCartComponent},\n\n      { path: 'my/orders', component: MyOrdersComponent, canActivate:[AuthGuard]},\n      { path: 'check-out', component: CheckOutComponent, canActivate: [AuthGuard]},\n      { path: 'order-success/:id', component: OrderSuccessComponent, canActivate:[AuthGuard]},\n    ]),\n\n  ],\n  declarations: [\n    ProductsComponent,\n    ShoppingCartComponent,\n    CheckOutComponent,\n    OrderSuccessComponent,\n    MyOrdersComponent,    \n    ProductFilterComponent,\n    ShoppingCartSummaryComponent,\n    ShippingFormComponent,\n  ],\n  exports: [\n    ProductsComponent\n  ]\n})\nexport class ShoppingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyAb6iuYnQRDz2JTTGmQQ58ujNIowonYqdM\",\n    authDomain: \"opshop-72560.firebaseapp.com\",\n    databaseURL: \"https://opshop-72560.firebaseio.com\",\n    projectId: \"opshop-72560\",\n    storageBucket: \"opshop-72560.appspot.com\",\n    messagingSenderId: \"992625802300\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}